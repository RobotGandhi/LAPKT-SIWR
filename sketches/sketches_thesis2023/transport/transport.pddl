(:policy
(:boolean_features "b_empty(c_and(c_primitive(in,0),c_primitive(is_box,0)))")
(:numerical_features "n_count(c_not(c_and(r_primitive(at_g,0,1),r_primitive(at,0,1))))" "n_concept_distance(c_some(r_inverse(at),is_truck(0)),r_primitive(road,0,1),c_and(c_all(r_inverse(at_g),c_bot),c_some(r_inverse(at),is_box(0))))" "n_concept_distance(c_primitive(in,1),r_primitive(road,0,1),c_some(r_primitive(at_g,0,1),c_primitive(in,0)))")
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0) (:c_n_gt 1) (:c_n_gt 2)) (:effects (:e_b_bot 0) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0) (:c_n_gt 1) (:c_n_eq 2)) (:effects (:e_b_bot 0) (:e_n_bot 0) (:e_n_dec 1)))
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0) (:c_n_eq 1) (:c_n_gt 2)) (:effects (:e_b_neg 0) (:e_n_bot 0) (:e_n_inc 1) (:e_n_bot 2)))
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 0) (:c_n_gt 1) (:c_n_gt 2)) (:effects (:e_b_bot 0) (:e_n_bot 0) (:e_n_dec 2)))
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 0) (:c_n_eq 1) (:c_n_gt 2)) (:effects (:e_b_bot 0) (:e_n_bot 0) (:e_n_dec 2)))
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 0) (:c_n_gt 1) (:c_n_eq 2)) (:effects (:e_b_pos 0) (:e_n_dec 0) (:e_n_bot 1) (:e_n_bot 2)))
)
