(:policy
(:boolean_features "b_nullary(moving)")
(:numerical_features "n_concept_distance(c_primitive(at,0),r_primitive(connected,0,1),c_and(c_primitive(group-source,1),c_not(c_some(r_primitive(group-source,1,0),c_primitive(group-painted,0)))))" "n_concept_distance(c_thesis(c_and(c_not(c_some(r_primitive(painted,0,1),c_primitive(painting,0))),c_some(r_primitive(connected,1,0),c_some(r_primitive(painted,0,1),c_primitive(painting,0)))),r_primitive(connected,0,1),c_primitive(group-source,0)),r_restrict(r_primitive(connected,0,1),c_some(r_primitive(painted,0,1),c_primitive(painting,0))),c_primitive(at,0))" "n_concept_distance(c_some(r_primitive(remaining-cells,1,0),c_primitive(painting,0)),r_primitive(number-predecessor,1,0),c_one_of(n0))")
(:rule (:conditions (:c_b_pos 0) (:c_n_gt 0)) (:effects (:e_n_dec 0)))
(:rule (:conditions (:c_b_pos 0) (:c_n_eq 0)) (:effects (:e_b_neg 0)))
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 1) (:c_n_gt 2)) (:effects (:e_n_dec 1)))
(:rule (:conditions (:c_b_neg 0) (:c_n_gt 1) (:c_n_gt 2)) (:effects (:e_n_dec 2)))
(:rule (:conditions (:c_b_neg 0) (:c_n_eq 2)) (:effects (:e_b_pos 0)))
)
